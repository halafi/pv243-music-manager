<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cz.muni.fi.pv243</groupId>
	<artifactId>music-manager</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>music-manager</name>
	<description>A starter Java EE 6 webapp project for use on JBoss AS 7 / EAP 6, generated from the jboss-javaee6-webapp archetype</description>

	<url>http://jboss.org/jbossas</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->
		<version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>
		<version.wildfly>8.0.0.Final</version.wildfly>

		<version.infinispan>7.0.0.Alpha4</version.infinispan>
		<version.arquillian>1.1.4.Final</version.arquillian>
		<version.shrinkwrap.resolvers>2.1.0</version.shrinkwrap.resolvers>
		<version.junit>4.11</version.junit>
		<version.logback>1.1.2</version.logback>
		<version.hibernate.search>4.5.1.Final</version.hibernate.search>

		<version.surefire.plugin>2.9</version.surefire.plugin>
		<version.war.plugin>2.4</version.war.plugin>

		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>
	</properties>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-all-7.0</artifactId>
				<version>1.0.0.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
		      <groupId>org.jboss.shrinkwrap.resolver</groupId>
		      <artifactId>shrinkwrap-resolver-depchain</artifactId>
		      <version>${version.shrinkwrap.resolvers}</version>
		      <scope>test</scope>
		      <type>pom</type>
		    </dependency>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${version.arquillian}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
	      <groupId>org.jboss.shrinkwrap.resolver</groupId>
	      <artifactId>shrinkwrap-resolver-api</artifactId>
	      <scope>test</scope>
	    </dependency>
	    <dependency>
	      <groupId>org.jboss.shrinkwrap.resolver</groupId>
	      <artifactId>shrinkwrap-resolver-spi</artifactId>
	      <scope>test</scope>
	    </dependency>
	    <dependency>
	      <groupId>org.jboss.shrinkwrap.resolver</groupId>
	      <artifactId>shrinkwrap-resolver-api-maven</artifactId>
	      <scope>test</scope>
	    </dependency>
	    <dependency>
	      <groupId>org.jboss.shrinkwrap.resolver</groupId>
	      <artifactId>shrinkwrap-resolver-spi-maven</artifactId>
	      <scope>test</scope>
	    </dependency>
	    <dependency>
	      <groupId>org.jboss.shrinkwrap.resolver</groupId>
	      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
	      <scope>test</scope>
	    </dependency>
	    <dependency>
	      <groupId>org.jboss.shrinkwrap.resolver</groupId>
	      <artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
	      <scope>test</scope>
	    </dependency>

		<!-- Hibernate search -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search-engine</artifactId>
			<version>${version.hibernate.search}</version>
		</dependency>
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search-infinispan</artifactId>
			<version>${version.hibernate.search}</version>
		</dependency>

		<!-- Logback -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${version.logback}</version>
		</dependency>

		<!-- Infinispan -->
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
			<version>${version.infinispan}</version>
		</dependency>

		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-query</artifactId>
			<version>${version.infinispan}</version>
		</dependency>

		<!--Infinispan's LevelDB cache store -->
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-cachestore-leveldb</artifactId>
			<version>${version.infinispan}</version>
		</dependency>

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<version>1.0.1.Final</version>
		</dependency>

		<!-- Import the EJB API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.0.1.Final</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Import the JSF API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.faces</groupId>
			<artifactId>jboss-jsf-api_2.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Now we declare any tools needed -->

		<!-- Annotation processor to generate the JPA 2.0 metamodel classes for 
			typesafe criteria queries -->
		<!--<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId> 
			<version>4.3.5.Final</version>
		</dependency>-->

		<!-- Annotation processor that raising compilation errors whenever constraint 
			annotations are incorrectly used. -->
		<!--<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
			<scope>provided</scope>
		</dependency>-->

		<!-- Tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>

		<!-- Arquillian -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<!-- Maven will append the version to the finalName (which is the name 
			given to the generated war, and hence the context root) -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
			<!-- To use, run: mvn package jboss-as:deploy -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>${version.jboss.maven.plugin}</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${version.surefire.plugin}</version>
						<configuration>
							<!--<skipTests>false</skipTests> -->
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Arquillian testing profile that executes tests in your JBoss AS instance -->
		<!-- This profile will start a new JBoss AS instance, and execute the test, 
			shutting it down when done -->
		<!-- Run with: mvn clean test -Parq-jbossas-managed -->
		<profile>
			<id>arq-jbossas-managed</id>
			<dependencies>
				<dependency>
					<groupId>org.wildfly</groupId>
					<artifactId>wildfly-arquillian-container-managed</artifactId>
					<scope>test</scope>
					<version>${version.wildfly}</version>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<!-- When built in OpenShift the 'openshift' profile will be used when 
			invoking mvn. -->
		<!-- Use this profile for any OpenShift specific customization your app 
			will need. -->
		<!-- By default that is to put the resulting archive into the 'deployments' 
			folder. -->
		<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
		<profile>
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>${version.war.plugin}</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>